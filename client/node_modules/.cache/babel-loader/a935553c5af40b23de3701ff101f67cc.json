{"ast":null,"code":"import _objectSpread from \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Edit from \"./edit\";\nconst formState = {\n  id: null,\n  name: '',\n  username: ''\n};\nconst initialStae = [{\n  id: 1,\n  name: 'Krishana',\n  username: 'krishana@gmail.com'\n}];\n\nconst App = () => {\n  const _useState = useState(formState),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUSer = _useState2[1];\n\n  const _useState3 = useState(initialStae),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mockdata = _useState4[0],\n        setMockdata = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        editing = _useState6[0],\n        setEditing = _useState6[1];\n\n  const _useState7 = useState(initialStae),\n        _useState8 = _slicedToArray(_useState7, 2),\n        current = _useState8[0],\n        setCurrent = _useState8[1];\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setUSer(_objectSpread({}, user, {\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    axios.get('/');\n  });\n\n  const handleAdd = () => {\n    user.id = mockdata.length + 1;\n    setMockdata([...mockdata, user]);\n    setUSer(formState);\n  };\n\n  const handleRemove = id => {\n    setMockdata(mockdata.filter(data => data.id != id));\n  };\n\n  const handleEdit = user => {\n    setEditing(true);\n    setCurrent({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    });\n  };\n\n  const handleUpdates = (id, updates) => {\n    setEditing(false);\n    setMockdata(mockdata.map(items => items.id === id ? updates : items));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, editing ? React.createElement(Edit, {\n    current: current,\n    handleUpdates: handleUpdates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleAdd(user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: user.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: user.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    tpe: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Add\")), mockdata.map(items => React.createElement(\"li\", {\n    key: items.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, items.id, \"-\", items.name, \"-\", items.username, React.createElement(\"button\", {\n    onClick: () => handleRemove(items.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"button\", {\n    onClick: () => handleEdit(items),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"E\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/src/App.js"],"names":["React","useState","useEffect","axios","Edit","formState","id","name","username","initialStae","App","user","setUSer","mockdata","setMockdata","editing","setEditing","current","setCurrent","handleChange","e","target","value","get","handleAdd","length","handleRemove","filter","data","handleEdit","handleUpdates","updates","map","items","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Edit from \"./edit\";\n\nconst formState = { id:null, name:'', username:'' };\nconst initialStae = [{ id:1, name:'Krishana', username:'krishana@gmail.com' }];\n\nconst App = () => {\n    const [user, setUSer] = useState(formState);\n    const [mockdata, setMockdata] = useState(initialStae);\n    const [editing, setEditing] = useState(false);\n    const [current, setCurrent] = useState(initialStae);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setUSer({ ...user, [name]: value })\n    }\n\n    useEffect(() => {\n      axios.get('/')\n    })\n\n    const handleAdd = () => {\n        user.id = mockdata.length + 1;\n        setMockdata([...mockdata, user]);\n        setUSer(formState);\n    }\n\n    const handleRemove = (id) => {\n        setMockdata(mockdata.filter(data => data.id != id));\n    }\n\n    const handleEdit = (user) => {\n        setEditing(true);\n        setCurrent({ id:user.id, name:user.name, username:user.username });\n    }\n\n    const handleUpdates = (id, updates) => {\n        setEditing(false);\n        setMockdata(mockdata.map(items => items.id === id ? updates : items))\n    }\n \n    return(\n        <div>\n            {editing ? \n            <Edit \n                current = {current}\n                handleUpdates = {handleUpdates}\n            />\n            :\n            <form onSubmit={(e) => {\n                e.preventDefault()\n                handleAdd(user)\n            }}>\n                <input type=\"text\" name=\"name\" value={user.name} onChange={handleChange} />\n                <input type=\"text\" name=\"username\" value={user.username} onChange={handleChange} />\n                <button tpe=\"submit\">Add</button>\n            </form>\n            }\n            {mockdata.map(items => (\n                <li key={items.id}>\n                    {items.id}-{items.name}-{items.username}\n                    <button onClick={()=>handleRemove(items.id)}>X</button>\n                    <button onClick={()=>handleEdit(items)}>E</button>\n                </li>\n            ))}\n        </div>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}