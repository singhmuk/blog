{"ast":null,"code":"import _objectSpread from \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Edit from \"./edit\";\nconst formState = {\n  name: '',\n  username: ''\n};\n\nconst App = () => {\n  const _useState = useState(formState),\n        _useState2 = _slicedToArray(_useState, 2),\n        items = _useState2[0],\n        setItems = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mockdata = _useState4[0],\n        setMockdata = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        editing = _useState6[0],\n        setEditing = _useState6[1];\n\n  const _useState7 = useState(formState),\n        _useState8 = _slicedToArray(_useState7, 2),\n        current = _useState8[0],\n        setCurrent = _useState8[1];\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await axios.get(\"/item\").then(res => res.data).then(data => setMockdata(data));\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setItems(_objectSpread({}, items, {\n      [name]: value\n    }));\n  };\n\n  const handleAdd = async e => {\n    e.preventDefault();\n    await axios.post('/item', items);\n    setMockdata([...mockdata, items]);\n    setItems(formState);\n  };\n\n  const handleDelete = async _id => {\n    await axios.delete(\"/item/\".concat(_id));\n    setMockdata(mockdata.filter(data => data._id != _id));\n  };\n\n  const handleEdit = user => {\n    setEditing(true);\n    setCurrent({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    });\n  };\n\n  const handleUpdates = async _id => {\n    setEditing(false);\n    const res = await axios.put(\"/item/\".concat(_id), items);\n    setMockdata(mockdata.map(items => items._id === _id ? res : items));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, editing ? React.createElement(Edit, {\n    current: current,\n    handleUpdates: handleUpdates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : React.createElement(\"form\", {\n    onSubmit: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: items.name,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: items.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), mockdata.map(items => React.createElement(\"li\", {\n    key: items._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, items._id, \" - \", items.name, \" - \", items.username, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => handleDelete(items._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"button\", {\n    onClick: () => handleEdit(items._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"E\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mukeshs/MERN/chat-app-master/contact-keeper/contact-keeper (copy)/client/src/App.js"],"names":["React","useState","useEffect","axios","Edit","formState","name","username","App","items","setItems","mockdata","setMockdata","editing","setEditing","current","setCurrent","fetchData","get","then","res","data","handleChange","e","target","value","handleAdd","preventDefault","post","handleDelete","_id","delete","filter","handleEdit","user","id","handleUpdates","put","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Edit from \"./edit\";\n\n\nconst formState = { name:'', username:'' }\n\nconst App = () => {\n    const [items, setItems] = useState(formState);\n    const [mockdata, setMockdata] = useState([]);\n    const [editing, setEditing] = useState(false);\n    const [current, setCurrent] = useState(formState);\n\n    useEffect(() => {\n        fetchData();\n      }, []);\n    \n      const fetchData = async () => {\n        await axios.get(\"/item\")\n          .then((res) => res.data)\n          .then((data) => setMockdata(data))\n      };\n\n      const handleChange = (e) => { \n        const {name, value} = e.target;\n        setItems({...items, [name]:value})\n      }\n    \n      const handleAdd = async (e) => { \n        e.preventDefault();     \n            await axios.post('/item', items); \n            setMockdata([...mockdata, items]);\n            setItems(formState);\n        }\n\n        const handleDelete = async (_id) => { \n            await axios.delete(`/item/${_id}`); \n            setMockdata(mockdata.filter(data => data._id != _id));\n        }\n\n        const handleEdit = (user) => {\n            setEditing(true);\n            setCurrent({ id:user.id, name:user.name, username:user.username });\n        }\n\n        const handleUpdates = async (_id) => {\n            setEditing(false);\n            const res = await axios.put(`/item/${_id}`, items); \n            setMockdata(mockdata.map(items => items._id === _id ? res : items))\n        }\n\n    return(\n        <div>\n            {editing ? \n            <Edit \n                current = {current}\n                handleUpdates = {handleUpdates}\n            />\n            :\n            <form onSubmit={handleAdd}>\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" value={items.name} onChange={handleChange} />\n                <label>Username</label>\n                <input type=\"text\" name=\"username\" value={items.username} onChange={handleChange} />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n}\n            {mockdata.map(items => (\n                <li key={items._id}>\n                    {items._id} - {items.name} - {items.username}<br/>\n                    <button onClick={()=>handleDelete(items._id)}>X</button> \n                    <button onClick={()=>handleEdit(items._id)}>E</button>\n                </li>\n            ))}\n        </div>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}